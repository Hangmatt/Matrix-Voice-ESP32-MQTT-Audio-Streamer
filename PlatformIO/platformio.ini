;PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = esp32pro

[common]
build_flags =
  '-DCORE_DEBUG_LEVEL=5' ; enables the [D] type of message on serial
  ; '-DBOARD_HAS_PSRAM' ; this apparently is not true. Maybe it is... figuring it out
  ; '-mfix-esp32-psram-cache-issue' ; only needed when board-has-psram is enabled
  '-DFIXED_POINT=1'
  '-DOUTSIDE_SPEEX=1'
  '-DMODELID="alexa"'      ; modelid is part of the MQTT topic
  '-lnn_model_alexa_wn3'
  '-Llib/esp_sr'
  '-lwakenet'
  '-ldl_lib'
  '-lc_speech_features'


lib_deps =
   https://github.com/matrix-io/matrixio_hal_esp32.git
   https://github.com/matrix-io/esp32-arduino-ota.git
   https://github.com/Locoduino/RingBuffer.git
   https://github.com/marvinroger/async-mqtt-client.git
   https://github.com/me-no-dev/AsyncTCP.git
   https://github.com/knolleary/pubsubclient.git
   https://github.com/bblanchon/ArduinoJson.git
   AsyncMqttClient
   ESP Async WebServer

[env:debug]
extra_scripts = pre:load_settings.py
platform = espressif32@1.9.0
upload_protocol = espota
build_type = debug
board = esp32dev
framework = arduino
board_build.partitions  = ../OTABuilder/partitions_two_ota.csv
check_tool = clangtidy, pvs-studio
check_flags =
  clangtidy: --checks=-*,cert-*,clang-analyzer-* --fix
build_flags = ${common.build_flags}
lib_deps = ${common.lib_deps}

[env:esp32pro]
extra_scripts = pre:load_settings.py
platform = espressif32@1.9.0
upload_protocol = espota
board = esp32dev
framework = arduino
check_tool = clangtidy, pvs-studio
check_flags =
  clangtidy: --checks=-*,cert-*,clang-analyzer-* --fix
board_build.partitions  = ../OTABuilder/partitions_two_ota.csv
; MatrixVoice ESP32 LAN name or IP, should match HOSTNAME in build_flags
build_flags = ${common.build_flags}
lib_deps = ${common.lib_deps}